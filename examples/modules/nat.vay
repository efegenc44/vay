module Numbers::Nat

import Numbers (Nat (Nat (Succ, Zero)))
import Interfaces (Bool (True, False))

variant Nat {
    Zero
    Succ(Nat)

    fun add(this, that : Nat) : Nat = match that {
        let .Zero    : this
        let .Succ(n) : Succ(this.add(n))
    }

    fun mul(this, that : Nat) : Nat = match that {
        let .Zero    : Zero
        let .Succ(n) : this.add(this.mul(n))
    }

    fun eq(this, that : Nat) : Bool = match this, that {
        let .Zero   , .Zero    : True
        let .Succ(n), .Succ(m) : n.eq(m)
        let this    , that     : False
    }
}

fun inc(n : Nat) : Nat = Succ(n)